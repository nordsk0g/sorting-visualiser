{"version":3,"sources":["components/Menu/Menu.js","components/SortingVisualiser/swap.js","components/SortingVisualiser/SortingAlgorithms.js","components/SortingVisualiser/SortingVisualiser.js","App.js","serviceWorker.js","index.js"],"names":["Menu","resetArray","bubbleSort","insertionSort","mergeSort","quickSort","className","onClick","swap","array","i","j","temp","getBubbleSortAnimations","animations","length","unsorted_until_index","sorted","push","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIndex","endIndex","middleIndex","Math","floor","k","doMerge","getQuickSortAnimations","low","high","partitionIndex","pivot","partition","SortingVisualiser","useState","setArray","useEffect","min","max","newArray","random","animationHelper","speed","arrayBars","document","getElementsByClassName","colorSwitch","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newOneHeight","newTwoHeight","height","position","getInsertionSortAnimations","newHeight","map","value","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dca73bed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Menu.css\";\r\n\r\nconst Menu = ({\r\n  resetArray,\r\n  bubbleSort,\r\n  insertionSort,\r\n  mergeSort,\r\n  quickSort\r\n}) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <button className=\"main-btn\" onClick={() => resetArray()}>\r\n        Generate New Array\r\n      </button>\r\n      <div className=\"container\">\r\n        <button className=\"main-btn\" onClick={() => bubbleSort()}>\r\n          Bubble Sort\r\n        </button>\r\n        <button className=\"main-btn\" onClick={() => insertionSort()}>\r\n          Insertion Sort\r\n        </button>\r\n        <button className=\"main-btn\" onClick={() => mergeSort()}>\r\n          Merge Sort\r\n        </button>\r\n        <button className=\"main-btn\" onClick={() => quickSort()}>\r\n          Quick Sort\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","function swap(array, i, j) {\r\n  const temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n\r\nexport default swap;\r\n","import swap from \"./swap\";\r\n\r\n// BUBBLE SORT\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  bubbleSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(array, animations) {\r\n  let unsorted_until_index = array.length - 1;\r\n  let sorted = false;\r\n\r\n  while (!sorted) {\r\n    sorted = true;\r\n    for (let i = 0; i < unsorted_until_index; i++) {\r\n      animations.push([true, i, i + 1]);\r\n      animations.push([false, i, i + 1]);\r\n      if (array[i] > array[i + 1]) {\r\n        sorted = false;\r\n        swap(array, i, i + 1);\r\n        animations.push([i, array[i], i + 1, array[i + 1]]);\r\n      }\r\n    }\r\n    unsorted_until_index--;\r\n  }\r\n}\r\n\r\n// INSERTION SORT\r\n\r\nexport function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  insertionSort(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(array, animations) {\r\n  for (let i = 1; i < array.length; i++) {\r\n    let position = i;\r\n    let temp = array[i];\r\n    animations.push([true, position, position - 1]);\r\n    animations.push([false, position, position - 1]);\r\n\r\n    while (position > 0 && array[position - 1] > temp) {\r\n      array[position] = array[position - 1];\r\n      position = position - 1;\r\n      animations.push([true, position, position + 1]);\r\n      animations.push([position, temp, position + 1, array[position + 1]]);\r\n      animations.push([false, position, position + 1]);\r\n    }\r\n    array[position] = temp;\r\n  }\r\n}\r\n\r\n// MERGE SORT\r\n\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIndex,\r\n  endIndex,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIndex === endIndex) return;\r\n  const middleIndex = Math.floor((startIndex + endIndex) / 2);\r\n  mergeSortHelper(\r\n    auxiliaryArray,\r\n    startIndex,\r\n    middleIndex,\r\n    mainArray,\r\n    animations\r\n  );\r\n  mergeSortHelper(\r\n    auxiliaryArray,\r\n    middleIndex + 1,\r\n    endIndex,\r\n    mainArray,\r\n    animations\r\n  );\r\n  doMerge(\r\n    mainArray,\r\n    startIndex,\r\n    middleIndex,\r\n    endIndex,\r\n    auxiliaryArray,\r\n    animations\r\n  );\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIndex,\r\n  middleIndex,\r\n  endIndex,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIndex;\r\n  let i = startIndex;\r\n  let j = middleIndex + 1;\r\n  while (i <= middleIndex && j <= endIndex) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIndex) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIndex) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\n// QUICK SORT\r\nexport function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  quickSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction partition(array, low, high, animations) {\r\n  let i = low - 1;\r\n  let pivot = array[high];\r\n\r\n  for (let j = low; j < high; j++) {\r\n    animations.push([true, j, high]);\r\n    animations.push([false, j, high]);\r\n    if (array[j] <= pivot) {\r\n      i++;\r\n      animations.push([i, array[j], j, array[i]]);\r\n      swap(array, i, j);\r\n    }\r\n  }\r\n  animations.push([i + 1, array[high], high, array[i + 1]]);\r\n  swap(array, i + 1, high);\r\n  return i + 1;\r\n}\r\n\r\nfunction quickSort(array, low, high, animations) {\r\n  if (low < high) {\r\n    let partitionIndex = partition(array, low, high, animations);\r\n    quickSort(array, low, partitionIndex - 1, animations);\r\n    quickSort(array, partitionIndex + 1, high, animations);\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport {\r\n  getBubbleSortAnimations,\r\n  getMergeSortAnimations,\r\n  getInsertionSortAnimations,\r\n  getQuickSortAnimations\r\n} from \"./SortingAlgorithms\";\r\nimport \"./SortingVisualiser.css\";\r\n\r\nconst PRIMARY_COLOR = \"#00ffb8\";\r\n\r\nconst SECONDARY_COLOR = \"#001eff\";\r\n\r\nconst TIMER = 5;\r\n\r\nconst randomIntFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst SortingVisualiser = () => {\r\n  const [array, setArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const resetArray = () => {\r\n    const newArray = [];\r\n    for (let i = 0; i < 150; i++) {\r\n      newArray.push(randomIntFromInterval(1, 500));\r\n    }\r\n    setArray(newArray);\r\n  };\r\n\r\n  const animationHelper = (animations, speed) => {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = animations[i].length < 4;\r\n      if (isColorChange) {\r\n        const [colorSwitch, barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        const color = colorSwitch ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [\r\n            barOneIndex,\r\n            newOneHeight,\r\n            barTwoIndex,\r\n            newTwoHeight\r\n          ] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIndex].style;\r\n          barOneStyle.height = `${newOneHeight}px`;\r\n          const barTwoStyle = arrayBars[barTwoIndex].style;\r\n          barTwoStyle.height = `${newTwoHeight}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  };\r\n\r\n  const bubbleSort = () => {\r\n    const animations = getBubbleSortAnimations(array);\r\n    animationHelper(animations, 1);\r\n  };\r\n\r\n  const insertionSort = () => {\r\n    const animations = getInsertionSortAnimations(array);\r\n    animationHelper(animations, 1);\r\n  };\r\n\r\n  const mergeSort = () => {\r\n    const animations = getMergeSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * TIMER);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIndex, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIndex].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * TIMER);\r\n      }\r\n    }\r\n  };\r\n\r\n  const quickSort = () => {\r\n    const animations = getQuickSortAnimations(array);\r\n    animationHelper(animations, TIMER);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        resetArray={resetArray}\r\n        bubbleSort={bubbleSort}\r\n        insertionSort={insertionSort}\r\n        mergeSort={mergeSort}\r\n        quickSort={quickSort}\r\n      />\r\n      <div className=\"array-container\">\r\n        {array.map((value, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"array-bar\"\r\n            style={{ height: `${value}px` }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortingVisualiser;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SortingVisualiser from \"./components/SortingVisualiser/SortingVisualiser\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualiser />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}